(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["sf-pager"],{

/***/ "./bundles/sf-pager.js":
/*!*****************************!*\
  !*** ./bundles/sf-pager.js ***!
  \*****************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_pager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-pager.js */ "./modules/sf-pager.js");
/* harmony import */ var _modules_sf_pager_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_sf_pager_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./modules/sf-pager.js":
/*!*****************************!*\
  !*** ./modules/sf-pager.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.sfBlazor = window.sfBlazor || {};

window.sfBlazor.Pager = function () {
  'use strict';
  /**
   * Client side scripts for Blazor Breadcrumb
   */

  var SfPager =
  /** @class */
  function () {
    function SfPager(dataId, element, dotnetRef) {
      this.element = element;
      this.dotnetRef = dotnetRef;
      window.sfBlazor.setCompInstance(this);
    }

    return SfPager;
  }();

  var Pager = {
    initialize: function initialize(dataId, element, dotnetRef) {
      sf.base.enableBlazorMode();
      new SfPager(dataId, element, dotnetRef);
    },
    currentPageFocus: function currentPageFocus(element, key, currentPage) {
      var numericContainer = element.querySelector(".e-numericcontainer");

      if (key == "ArrowKey") {
        numericContainer.querySelector(".e-focused").focus();
        return;
      }

      var numericElement = numericContainer.querySelectorAll(".e-link:last-child")[0];

      if (key == "PreviousPage" || numericElement.innerText != currentPage) {
        numericContainer.querySelector(".e-link").focus();
      } else {
        numericElement.focus();
      }
    },
    pagerFocus: function pagerFocus(element, key) {
      var pagerContainer = element.querySelector(".e-pagercontainer");
      var numericContainer = pagerContainer.querySelector(".e-numericcontainer");
      var firstPage = pagerContainer.querySelector(".e-firstpage.e-pager-default");
      var previousPage = pagerContainer.querySelector(".e-prevpage.e-pager-default");
      var pagerElement = pagerContainer.querySelector(".e-pp");
      var numericLink = numericContainer.querySelectorAll('.e-link')[0];
      var numericAllFocusedLink = numericContainer.querySelectorAll(".e-link.e-focused");
      var numericFocuedLink = numericContainer.querySelector('.e-link.e-focused');
      var nextPager = pagerContainer.querySelector('.e-nextpage');
      var lastPager = pagerContainer.querySelector('.e-lastpage');
      var numericAllLink = numericContainer.querySelectorAll('.e-link');
      var previousFocus;

      if (!sf.base.isNullOrUndefined(previousPage)) {
        previousFocus = previousPage.classList.contains("e-focused");
      }

      if (key === "ArrowDown") {
        if (firstPage) {
          firstPage.focus();
          return "FirstPage";
        } else if (previousPage) {
          firstPage.focus();
          return "PreviousPage";
        } else {
          numericAllLink[1].focus();
          return "1";
        }
      } else if (key == "Tab") {
        if (firstPage != null && firstPage.classList.contains("e-focused")) {
          previousPage.focus();
          return "PreviousPage";
        } else if (previousPage != null && previousFocus || pagerContainer.querySelector(".e-pp.e-focused") != null) {
          if (pagerElement != null && !pagerElement.classList.contains("e-focused")) {
            pagerElement.focus();
            return "PreviousPagerCount";
          } else {
            numericLink.focus();
            return numericLink.innerText;
          }
        } else if (numericAllFocusedLink.length > 0 && pagerContainer.querySelector('.e-link.e-focused') != null && pagerContainer.querySelector('.e-link.e-focused').nextElementSibling != null) {
          numericFocuedLink.nextElementSibling.focus();
          return numericFocuedLink.nextElementSibling.innerText;
        } else if (numericAllFocusedLink.length > 0 && pagerContainer.querySelector(".e-np") != null && pagerContainer.querySelector(".e-np.e-focused") == null) {
          pagerContainer.querySelector('.e-np').focus();
          return "NextPagerCount";
        } else if (numericAllFocusedLink.length > 0 || pagerContainer.querySelectorAll(".e-np.e-focused").length > 0) {
          if (nextPager != null) {
            nextPager.focus();
            return "NextPage";
          } else {
            numericFocuedLink.focus();
            return numericFocuedLink.innerText;
          }
        } else if (pagerContainer.querySelector(".e-nextpage.e-focused") != null) {
          lastPager.focus();
          return "LastPage";
        } else {
          lastPager.focus();
          return "LastPage";
        }
      } else if (key == "ShiftTab") {
        if (previousPage != null && previousFocus) {
          firstPage.focus();
          return "FirstPage";
        } else if (previousPage && pagerContainer.querySelector(".e-pp.e-focused")) {
          previousPage.focus();
          return "PreviousPage";
        } else if (numericAllLink[0].classList.contains('e-focused')) {
          if (pagerElement != null) {
            pagerElement.focus();
            return "PreviousPagerCount";
          } else if (previousPage) {
            previousPage.focus();
            return "PreviousPage";
          } else {
            numericLink.focus();
            return "1";
          }
        } else if (numericAllFocusedLink.length > 0) {
          numericFocuedLink.previousElementSibling.focus();
          return numericFocuedLink.previousElementSibling.innerText;
        } else if (pagerContainer.querySelectorAll(".e-nextpage.e-focused").length > 0 && pagerContainer.querySelector(".e-np") != null) {
          pagerContainer.querySelector('.e-np').focus();
          return "NextPagerCount";
        } else if (pagerContainer.querySelectorAll(".e-nextpage.e-focused").length > 0 || pagerContainer.querySelectorAll(".e-np.e-focused").length > 0) {
          var page = numericAllLink.length;
          numericAllLink[page - 1].focus();
          return numericContainer.querySelectorAll(".e-link:last-child")[0].innerText;
        } else if (pagerContainer.querySelector(".e-lastpage.e-focused") != null) {
          nextPager.focus();
          return "NextPage";
        } else {
          if (!firstPage.classList.contains('.e-disabled')) {
            firstPage.focus();
            return "FirstPage";
          }

          return "0";
        }
      } else {
        return "0";
      }
    }
  };
  return Pager;
}();

/***/ })

}]);(async()=>{await import("/_content/Syncfusion.Blazor/scripts/syncfusion-blazor-base.min.js").then(()=>{sfBlazor.loadDependencies('sfpager');})})();