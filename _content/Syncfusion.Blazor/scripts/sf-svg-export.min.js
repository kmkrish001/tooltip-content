(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["sf-svg-export"],{

/***/ "./bundles/sf-svg-export.js":
/*!**********************************!*\
  !*** ./bundles/sf-svg-export.js ***!
  \**********************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_svg_export_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-svg-export.js */ "./modules/sf-svg-export.js");


/***/ }),

/***/ "./modules/sf-svg-export.js":
/*!**********************************!*\
  !*** ./modules/sf-svg-export.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

window.sfExport = {
  exportToImage: function () {
    var _exportToImage = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(type, fileName, elementId, allowDownload) {
      var returnValue;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return window.sfExport.imageExport(type, fileName, elementId, allowDownload);

            case 2:
              returnValue = _context2.sent;

              if (!(returnValue instanceof Promise)) {
                _context2.next = 8;
                break;
              }

              _context2.next = 6;
              return returnValue.then( /*#__PURE__*/function () {
                var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(data) {
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          return _context.abrupt("return", data);

                        case 1:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function (_x5) {
                  return _ref.apply(this, arguments);
                };
              }());

            case 6:
              _context2.next = 9;
              break;

            case 8:
              return _context2.abrupt("return", returnValue);

            case 9:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function exportToImage(_x, _x2, _x3, _x4) {
      return _exportToImage.apply(this, arguments);
    }

    return exportToImage;
  }(),
  validateExport: function () {
    var _validateExport = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(returnValue) {
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (!(returnValue instanceof Promise)) {
                _context4.next = 3;
                break;
              }

              _context4.next = 3;
              return returnValue.then( /*#__PURE__*/function () {
                var _ref2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(data) {
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          return _context3.abrupt("return", data);

                        case 1:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                }));

                return function (_x7) {
                  return _ref2.apply(this, arguments);
                };
              }());

            case 3:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    function validateExport(_x6) {
      return _validateExport.apply(this, arguments);
    }

    return validateExport;
  }(),
  imageExport: function () {
    var _imageExport = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(type, fileName, elementId, allowDownload) {
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", new Promise(function (resolve, reject) {
                var element = document.getElementById(elementId);
                var svgData = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">' + element.outerHTML + '</svg>';
                var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] : [new XMLSerializer().serializeToString(element)], {
                  type: 'image/svg+xml'
                }));

                if (type === 'SVG') {
                  if (allowDownload) {
                    window.sfExport.triggerDownload(type, fileName, url);
                  }

                  resolve(null);
                } else {
                  var canvasElement = document.createElement('canvas');
                  canvasElement.height = element.clientHeight;
                  canvasElement.width = element.clientWidth;
                  var context = canvasElement.getContext('2d');
                  var image = new Image();

                  image.onload = function () {
                    context.drawImage(image, 0, 0);
                    window.URL.revokeObjectURL(url);

                    if (allowDownload) {
                      window.sfExport.triggerDownload(type, fileName, canvasElement.toDataURL('image/png').replace('image/png', 'image/octet-stream'));
                      resolve(null);
                    } else {
                      var base64String = type === 'JPEG' ? canvasElement.toDataURL('image/jpeg') : type === 'PNG' ? canvasElement.toDataURL('image/png') : '';
                      resolve(base64String);
                    }
                  };

                  image.src = url;
                }
              }));

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    function imageExport(_x8, _x9, _x10, _x11) {
      return _imageExport.apply(this, arguments);
    }

    return imageExport;
  }(),
  triggerDownload: function triggerDownload(type, fileName, url) {
    var anchorElement = document.createElement('a');
    anchorElement.download = fileName + '.' + type.toLocaleLowerCase();
    anchorElement.href = url;
    anchorElement.click();
  },
  downloadPdf: function downloadPdf(base64String, fileName) {
    var sliceSize = 512;
    var byteCharacters = atob(base64String);
    var byteArrays = [];

    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
      var slice = byteCharacters.slice(offset, offset + sliceSize);
      var byteNumbers = new Array(slice.length);

      for (var i = 0; i < slice.length; i++) {
        byteNumbers[i] = slice.charCodeAt(i);
      }

      var byteArray = new Uint8Array(byteNumbers);
      byteArrays.push(byteArray);
    }

    var blob = new Blob(byteArrays, {
      type: 'application/pdf'
    });
    var Url = URL || webkitURL;
    var blobUrl = Url.createObjectURL(blob);
    sfExport.triggerDownload("PDF", fileName, blobUrl);
  },
  print: function print(id) {
    var printWindow;
    var printElement;

    if (typeof id === 'string') {
      printElement = document.getElementById(id);
    } else {
      printElement = id;
    }

    printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');
    printWindow.moveTo(0, 0);
    printWindow.resizeTo(screen.availWidth, screen.availHeight);
    var div = document.createElement('div');
    div.appendChild(printElement.cloneNode(true));
    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));
    var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));
    var reference = '';

    if (blinks.length) {
      for (var l = 0, len = blinks.length; l < len; l++) {
        links.push(blinks[l]);
      }
    }

    for (var i = 0, len = links.length; i < len; i++) {
      reference += links[i].outerHTML;
    }

    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');
    printWindow.document.close();
    printWindow.focus();
    var interval = setInterval(function () {
      if (printWindow.ready) {
        printWindow.print();
        printWindow.close();
        clearInterval(interval);
      }
    }, 500);
  }
};

/***/ })

}]);(async()=>{await import("/_content/Syncfusion.Blazor/scripts/syncfusion-blazor-base.min.js").then(()=>{})})();